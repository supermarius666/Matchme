# Generated by Django 5.1.7 on 2025-05-21 07:39

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_picture', models.ImageField(default='profile_pics/default_profile_pic.png', upload_to='profile_pics')),
                ('cover_picture', models.ImageField(default='cover_pics/default_cover_pic.png', upload_to='cover_pics')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], default='O', max_length=1)),
                ('biography', models.CharField(blank=True, max_length=255)),
                ('online', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='user_profiles', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='user_profiles', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('musica', models.BooleanField(default=False)),
                ('videogiochi', models.BooleanField(default=False)),
                ('sport', models.BooleanField(default=False)),
                ('viaggi', models.BooleanField(default=False)),
                ('arte', models.BooleanField(default=False)),
                ('lettura', models.BooleanField(default=False)),
                ('cucina', models.BooleanField(default=False)),
                ('spiritualita', models.BooleanField(default=False)),
                ('moda', models.BooleanField(default=False)),
                ('cinema_serie', models.BooleanField(default=False)),
                ('fotografia', models.BooleanField(default=False)),
                ('natura', models.BooleanField(default=False)),
                ('uscite_romantiche', models.BooleanField(default=False)),
                ('spontaneita', models.BooleanField(default=False)),
                ('relazione_seria', models.BooleanField(default=False)),
                ('avventure', models.BooleanField(default=False)),
                ('ballo', models.BooleanField(default=False)),
                ('amicizia', models.BooleanField(default=False)),
                ('tecnologia', models.BooleanField(default=False)),
                ('volontariato', models.BooleanField(default=False)),
                ('goth', models.BooleanField(default=False)),
                ('casual', models.BooleanField(default=False)),
                ('animali', models.BooleanField(default=False)),
                ('commedia', models.BooleanField(default=False)),
                ('passeggiate', models.BooleanField(default=False)),
                ('filosofia', models.BooleanField(default=False)),
                ('relax', models.BooleanField(default=False)),
                ('lavoro', models.BooleanField(default=False)),
                ('crescita_personale', models.BooleanField(default=False)),
                ('cultura', models.BooleanField(default=False)),
                ('minimalismo', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_counter', models.IntegerField(default=0)),
                ('like_sent_counter', models.IntegerField(default=0)),
                ('dislike_sent_counter', models.IntegerField(default=0)),
                ('match_rate', models.FloatField(default=0.0)),
                ('like_recv_counter', models.IntegerField(default=0)),
                ('dislike_recv_counter', models.IntegerField(default=0)),
                ('registration_day', models.DateField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_stats', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
